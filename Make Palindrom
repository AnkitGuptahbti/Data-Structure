// JAVA CODE

    public static boolean makePalindrome(int n, String[] arr) {
        // code here
        Map<String,Integer> mm = new HashMap<>();
        int odd=0;
        for(String x:arr){
            mm.putIfAbsent(x,0);
            mm.put(x,mm.get(x)+1);
        }
        for(Map.Entry<String,Integer> x : mm.entrySet()){
            StringBuilder t = new StringBuilder(x.getKey());
            t.reverse();
            String temp = t.toString();
            if(temp==x.getKey()){
                if(x.getValue()%2==1)odd++;
                if(odd>1)return false;
            }
            else if(mm.get(temp)!=x.getValue())return false;
        }
        return true;
    }
    
    
// C++ CODE

    bool makePalindrome(int n,vector<string> &arr){
        // Code here
        unordered_map<string,int> mm;
        for(auto x:arr)mm[x]++;
        int odd=0;
        for(auto x:mm){
            string temp = x.first;
            reverse(temp.begin(),temp.end());
            if(x.first==temp){
                if(x.second%2)odd++;
                if(odd>1)return false;
            }
            else{
                if(x.second!=mm[temp])return false;
            }
        }
        return true;
    }
